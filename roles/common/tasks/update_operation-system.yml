---
- name: Gather facts
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  ansible.builtin.setup:
    gather_subset:
      - all

- name: Add EPEL repository
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  package:
    name: epel-release
    state: latest

- name: Update the system packages
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  package:
    name: "*"
    state: latest

# - name: Upgrade the system
#   become: yes
#   become_method: sudo
#   become_user: "{{ _vm_default_user }}"
#   vars:
#     ansible_become_password: "toor"
#   package:
#     upgrade: yes

# - name: Clean the local repository
#   become: yes
#   become_method: sudo
#   become_user: "{{ _vm_default_user }}"
#   vars:
#     ansible_become_password: "toor"
#   package:
#     autoclean: yes

- name: Remove packages not needed anymore
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  package:
    autoremove: yes

- name: Install common packages
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  package:
    name: "{{ item }}"
    state: latest
  ignore_errors: true
  with_items: 
    - "{{ install_os_packages }}"
  register: installPackageResult

- name: Print Install common packages
  debug:
    var: installPackageResult

- name: set system timezone
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  register: modify_timezone
  timezone:
      name: America/Recife

- name: Get Time Zone
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  register: timezone
  ignore_errors: true
  command: timedatectl

- name: Show Time Zone
  debug:
    var: timezone.stdout
  notify: Reboot System

- name: Wait for "{{ _hostname }}" to become reachable
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  wait_for:
    host: "{{ _hostname }}"
    port: 22
    delay: 10
    timeout: 120

- name: Start qemu-guest-agent Service
  become: yes
  become_method: sudo
  become_user: "{{ _vm_default_user }}"
  vars:
    ansible_become_password: "toor"
  service:
    name: qemu-guest-agent
    state: started
    enabled: yes
  ignore_errors: true
  notify: Reboot System