---
# ---
# - name: Create new LXC container in Proxmox [{{ _node }}]
#   become: yes
#   gather_facts: No
#   hosts: "{{ host }}"
#   vars:
#     ansible_python_interpreter: /usr/bin/python3
#   collections:
#     - community.general

#   tasks:
#     - name: Install python3 and python3-pip package
#       package:
#         name:
#           - python3
#           - python3-pip
#         state: present

#     - name: Install proxmoxer and requests packages
#       pip:
#         name:
#           - proxmoxer
#           - requests

#     - name: Create Container
#       community.general.proxmox:
#         vmid: "{{ _vmid }}"
#         node: "{{ _node }}"
#         api_user: "{{ _api_user }}"
#         api_password: "{{ hostvars[host].ansible_password }}"
#         api_host: "{{ _api_host }}"
#         state: "{{ _state }}"
#         hostname: "{{ _hostname }}"
#         password: "{{ _container_password  }}"
#         ostemplate: "{{ _ostemplate }}"
#         cores: "{{ _cores }}"
#         disk: "{{ _disk }}"
#         memory: "{{ _memory }}"
#         swap: "{{ _memory }}"
#         storage: "local-lvm"
#         netif: '{"net0":"name=eth0,gw={{ _network_gw }},ip={{ _network_ip }}/24,bridge=vmbr0"}'
#         unprivileged: "{{ _unprivileged }}"
#         onboot: "{{ _onboot }}"
#         description: "
#           ## **{{ _hostname }}:**\n
#             - **ID:** _{{ _vmid }}_\n
#             - **hostname:** _{{ _hostname }}_\n
#             - **OS:** _{{ _ostemplate }}_\n
#             - **IP:** _{{ _network_ip }}_\n
#             - **User:** _root_\n
#             - **Password:** _{{ _container_password  }}_\n
#         "
#         features:
#           - nesting={{ _nesting }}
#           - keyctl={{ _keyctl }}
#         # # pubkey:  '{{ hostvars[item].sshpubkey}}'
#       loop_control:
#         pause: 5

#     - name: Start Container
#       community.general.proxmox:
#         vmid: "{{ _vmid }}"
#         api_user: "{{ _api_user }}"
#         api_password: "{{ hostvars[host].ansible_password }}"
#         api_host: "{{ _api_host }}"
#         state: started



- name: Create Container in Proxmox and Host in AWX
  become: true
  become_method: sudo
  gather_facts: true
  hosts: "{{ host }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  collections:
    - community.general
  roles:
    - role: common

  pre_tasks:

    # - name: Install python3 and python3-pip package
    #   package:
    #     name:
    #       - python3
    #       - python3-pip
    #     state: present

    # - name: Install proxmoxer and requests packages
    #   pip:
    #     name:
    #       - proxmoxer
    #       - requests

    - include_role:
        name: awx
        tasks_from: "collect_awx_token.yml"
        apply:
          delegate_to: ct-awx

    - include_role:
        name: proxmox
        tasks_from: "retrieve_last_ct_vm_info.yml"

    - set_fact: 
        _network_ip: "{{ proxmox_next_container_ip }}"
        _vmid: "{{ proxmox_next_container_id }}"
        
  tasks:
    - include_role:
        name: proxmox
        tasks_from: "create_container.yml"

    - include_role:
        name: awx
        tasks_from: "create_host.yml"
        apply:
          delegate_to: ct-awx
      vars:
        external_call_host: "ct-awx"

    - name: Waiting 15 Seconds ...
      ansible.builtin.pause:
        seconds: 15
    
    - include_role:
        name: common
        tasks_from: "install-sshd-centos8stream.yml"
    
    - name: Waiting 15 Seconds ...
      ansible.builtin.pause:
        seconds: 15

    - include_role:
        name: common
        tasks_from: "update_operation-system.yml"
        apply:
          delegate_to: "{{ _network_ip }}"

    - name: Waiting 15 Seconds ...
      ansible.builtin.pause:
        seconds: 15
    
    - include_role:
        name: common
        tasks_from: "install_oh-my-zsh.yml"
        apply:
          delegate_to: "{{ _network_ip }}"