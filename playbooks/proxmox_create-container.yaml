---
- name: Create new LXC container in Proxmox [{{ _node }}]
  become: yes
  gather_facts: No
  hosts: "{{ host }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  collections:
    - community.general

  tasks:
    - name: Install pip package
      package:
        name: python3-pip
        state: latest

    - name: Install proxmoxer package
      pip:
        name: proxmoxer

    - name: Install requests package
      pip:
        name: requests

    - name: Create Container
      proxmox:
        vmid: "{{ _vmid }}"
        node: "{{ _node }}"
        api_user: "{{ _api_user }}"
        api_password: "{{ hostvars[host].ansible_password }}"
        api_host: "{{ _api_host }}"
        state: "{{ _state }}"
        hostname: "ct-{{ _container_hostname }}"
        password: "{{ _container_password  }}"
        ostemplate: "{{ _ostemplate }}"
        cores: "{{ _cores }}"
        disk: "{{ _disk }}"
        memory: "{{ _memory }}"
        swap: "{{ _memory }}"
        storage: "local-lvm"
        netif: '{"net0":"name=eth0,gw={{ _network_gw }},ip={{ _network_ip }}/24,bridge=vmbr0"}'
        unprivileged: "{{ _unprivileged }}"
        onboot: "{{ _onboot }}"
        # description: "
        #   ## **{{ _container_hostname }}:**\n
        #     - **ID:** _{{ _vmid }}_\n
        #     - **hostname:** _ct-{{ _container_hostname }}_\n
        #     - **OS:** _{{ _ostemplate }}_\n
        #     - **IP:** _{{ _network_ip }}_\n
        #     - **User:** _root_\n
        #     - **Password:** _{{ _container_password  }}_\n
        # "
        # features:
        #   - nesting={{ _nesting }}
        #   - keyctl={{ _keyctl }}
        # # pubkey:  '{{ hostvars[item].sshpubkey}}'
      loop_control:
        pause: 5

    - name: Start Container
      proxmox:
        vmid: "{{ _vmid }}"
        api_user: "{{ _api_user }}"
        api_password: "{{ hostvars[host].ansible_password }}"
        api_host: "{{ _api_host }}"
        state: started
# - name: Add Host in Ansible AWX
#   become: yes
#   gather_facts: No
#   hosts: "{{ _create_host_host }}"
#   vars:
#     ansible_python_interpreter: /usr/bin/python3
#   collections:
#     - awx.awx

#   tasks:
#     - name: Collect AWX root token
#       command: |
#         docker exec awx_task /bin/bash -c 'awx-manage create_oauth2_token --user root'
#       register: awx_token

#     - name: Add host in inventory
#       host:
#         name: "ct-{{ _container_hostname }}"
#         description: "{{ _create_host_description }}"
#         inventory: "{{ _create_host_inventory }}"
#         state: present
#         controller_host: "http://{{ hostvars[_create_host_host].ansible_host }}"
#         controller_oauthtoken: "{{ awx_token.stdout }}"
#         validate_certs: false
#         variables:
#           ansible_host: "{{ _network_ip }}"
