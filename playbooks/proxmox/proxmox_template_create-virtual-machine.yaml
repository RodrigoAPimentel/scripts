---
- name: Create new Virtual Machine in Proxmox [{{ _node }}] from Template
  become: yes
  gather_facts: No
  hosts: "{{ host }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
  collections:
    - community.general

  tasks:
    - name: Cloning virtual machine from Template "{{ _vmid_template }}" with name "{{ _hostname }}"
      proxmox_kvm:
        api_user: "{{ _api_user }}"
        api_password: "{{ hostvars[host].ansible_password }}"
        api_host: "{{ _api_host }}"
        name: "{{ _hostname }}"
        node: "{{ _node }}"
        clone: "{{ _vmid_template }}"
        vmid: "{{ _vmid_template }}"
        newid: "{{ _vmid }}"
        storage: local-lvm
        format: raw
        timeout: 300
      tags: provission,test

    - name: Increasing disk ...
      shell: A=$(qm list | grep "{{ _hostname }}" | awk '{print $1}'); B=$(qm list | grep "{{ _hostname }}" | awk '{print $5}'); qm resize $A {{ _default_disk }} {{ _disk }}G
      when: '{{ _disk }} != "0"'
      tags: provission

    - name: Configuring Memory ...
      shell: A=$(qm list |grep "{{ _hostname }}" | awk '{print $1}'); qm set $A --memory '{{ _memory }}'
      tags: provission

    - name: Configuring CPU Cores ...
      shell: A=$(qm list |grep "{{ _hostname }}" | awk '{print $1}'); qm set $A --cores '{{ _cores }}'
      tags: provission

    - name: Configuring IP ...
      shell: A=$(qm list |grep "{{ _hostname }}" | awk '{print $1}'); qm set $A --ipconfig0 'ip={{ _network_ip }}/24,gw={{ _network_gw }}'
      tags: provission

    - name: Configuring Description ...
      shell: A=$(qm list |grep "{{ _hostname }}" | awk '{print $1}'); qm set $A --description '<b>{{ _hostname }}:</b><br>- <b>ID:</b> _{{ _vmid }}_<br>- <b>hostname:</b> _{{ _hostname }}_<br>- <b>IP:</b> _{{ _network_ip }}_<br>- <b>OS:</b> _{{ _operation_system }}_<br>- <b>User:</b> _root_<br>- <b>Password:</b> _toor_'
      tags: provission

    - name: Create cloud-init config file ...
      shell: |
        cat << EOF > /var/lib/vz/snippets/cloud_init_conf_{{ _vmid }}.yml
        #cloud-config
        runcmd:
          - hostnamectl set-hostname {{ _hostname }}
        ssh_pwauth: true
        EOF
      tags: provission

    - name: Configuring cloud-init ...
      shell: A=$(qm list |grep "{{ _hostname }}" | awk '{print $1}'); qm set $A --cicustom 'user=local:snippets/cloud_init_conf_{{ _vmid }}.yml'
      tags: provission

    - name: Starting new Virtual Machine in current proxmox node
      proxmox_kvm:
        api_user: "{{ _api_user }}"
        api_password: "{{ hostvars[host].ansible_password }}"
        api_host: "{{ _api_host }}"
        name: "{{ _hostname }}"
        node: "{{ _node }}"
        state: started
        timeout: 60
      tags: provission
      ignore_errors: true

---
- name: Update System in "{{ _hostname }}"
  become: yes
  gather_facts: No
  hosts: "{{ _hostname }}"

  tasks:
    - name: Add EPEL repository
      package:
        name: epel-release
        state: latest

    - name: Update the system packages
      package:
        name: "*"
        state: latest
    
    - name: Upgrade the system
      package:
        upgrade: yes

    - name: Clean the local repository
      package:
        autoclean: yes
    
    - name: Remove packages not needed anymore
      package:
        autoremove: yes

    - name: Install common packages
      package:
        name: "{{ packages }}"
        state: latest
      vars:
        packages:
        - ca-certificates
        - curl
        - wget
        - python3-pip
        - python3-setuptools
        - nano
        - tar
        - util-linux-user
        - git
      ignore_errors: yes

    - name: Reboot System
      reboot:
