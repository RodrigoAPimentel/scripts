---
- name: Destroy the Container with VMID {{ _vmid }} in the proxmox {{ _api_host }}
  become: yes
  gather_facts: No
  hosts: "{{ host }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Stop Container
      proxmox:
        vmid: "{{ _vmid }}"
        api_user: "{{ _api_user }}"
        api_password: "{{ hostvars[host].ansible_password }}"
        api_host: "{{ _api_host }}"
        force: yes
        state: stopped
      loop_control:
        pause: 5

    - name: Destroy container
      proxmox:
        vmid: "{{ _vmid }}"
        api_user: "{{ _api_user }}"
        api_password: "{{ hostvars[host].ansible_password }}"
        api_host: "{{ _api_host }}"
        state: absent

- name: Disable Host in Ansible AWX
  become: yes
  gather_facts: No
  hosts: "{{ _disable_host_host }}"
  vars:
    ansible_python_interpreter: /usr/bin/python3
    username: root
    password: 12345
  collections:
    - awx.awx

  tasks:
    - name: Collect AWX root token
      command: |
        docker exec awx_task /bin/bash -c 'awx-manage create_oauth2_token --user root'
      register: awx_token

    - name: Disable host in inventory
      host:
        name: "{{ _container_hostname }}"
        inventory: "{{ _disable_host_inventory }}"
        enabled: false
        controller_host: "http://{{ hostvars[_disable_host_host].ansible_host }}"
        controller_oauthtoken: "{{ awx_token.stdout }}"
        validate_certs: false
